<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lamaper</title>
    <link>https://lamaper.github.io/</link>
    <description>Recent content on lamaper</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 28 Oct 2024 21:13:03 +0800</lastBuildDate>
    <atom:link href="https://lamaper.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHubPages &#43; Hugo博客搭建记录（1）</title>
      <link>https://lamaper.github.io/post/hugo-1/</link>
      <pubDate>Mon, 28 Oct 2024 21:13:03 +0800</pubDate>
      <guid>https://lamaper.github.io/post/hugo-1/</guid>
      <description>&lt;p&gt;今日打开尘封多年的github pages，搭建自己的博客，为了防止重构时忘了怎么搞，故做个笔记。&lt;/p&gt;&#xA;&lt;h3 id=&#34;远程连接仓库&#34;&gt;〇、远程连接仓库&lt;/h3&gt;&#xA;&lt;p&gt;首先创建一个username.github.io的仓库，作为github pages的目录&lt;/p&gt;&#xA;&lt;h3 id=&#34;一安装hugo&#34;&gt;一、安装Hugo&lt;/h3&gt;&#xA;&lt;p&gt;进入hugo官方仓库，下载最新release：&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34;&gt;Releases · gohugoio/hugo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;我用的windows11，所以下载amd64版本。如果在虚拟机上运行，应当下载linux-amd64版本。&lt;/p&gt;&#xA;&lt;p&gt;hugo的配置很简单，下载下来的压缩包里只有&lt;code&gt;hugo.exe&lt;/code&gt;，只需要将其放到任意安装目录即可。&lt;/p&gt;&#xA;&lt;p&gt;我将hugo安装到&lt;code&gt;E:\ProgramFile\hugo&lt;/code&gt;中，并将此目录配置到环境变量&lt;code&gt;path&lt;/code&gt;中，当启动powershell，输入hugo有反应时，表明hugo配置成功。&lt;/p&gt;&#xA;&lt;h3 id=&#34;二初始化网页&#34;&gt;二、初始化网页&lt;/h3&gt;&#xA;&lt;p&gt;切换到工作目录，创建自己的网站：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;cd&lt;/span&gt; D:\Workspace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site MyGitHubPages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着，进入工作目录：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo -D&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样便会生成一个发布版的网页，目录为&lt;code&gt;.\MyGitHubPages\public&lt;/code&gt;，为了方便使用，我们把这里设为git仓库。&lt;/p&gt;&#xA;&lt;p&gt;在这之前，清空public中的所有文件，然后&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull remote http://github.com/&amp;lt;MY sites&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;三配置主题&#34;&gt;三、配置主题&lt;/h3&gt;&#xA;&lt;p&gt;我选择了hyde主题，导入主题需要如此操作：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;cd&lt;/span&gt; D:\Workspace\MyGitHubPages\themes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/spf13/hyde.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后配置&lt;code&gt;hugo.toml&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;code .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;修改文件内容为：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;baseURL&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://lamaper.github.io/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;languageCode&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zh-CN&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lamaper&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hyde&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;Menus&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt; = [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Github&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;URL&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/lamaper/&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;博客园&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;URL&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://lamaper.cnblogs.com/&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;description&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;你好，我是lamaper，BIT信科大一学生，喜欢与计算机相关的所有东西！&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Rust学习笔记（1）</title>
      <link>https://lamaper.github.io/post/rust-study-1/</link>
      <pubDate>Thu, 24 Oct 2024 20:41:42 +0800</pubDate>
      <guid>https://lamaper.github.io/post/rust-study-1/</guid>
      <description>&lt;h3 id=&#34;string和str&#34;&gt;String和&amp;amp;str&lt;/h3&gt;&#xA;&lt;p&gt;在rustlings的练习题中见到了一些判断类型的题：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string_slice(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;.to_string());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string(String::from(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hi&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rust is fun!&amp;#34;&lt;/span&gt;.to_owned());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string_slice(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nice weather&amp;#34;&lt;/span&gt;.into());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string(format!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Interpolation &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Station&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// WARNING: This is byte indexing, not character indexing.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Character indexing can be done using `s.chars().nth(INDEX)`.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    string_slice(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;String::from(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string_slice(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  hello there &amp;#34;&lt;/span&gt;.trim());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Happy Monday!&amp;#34;&lt;/span&gt;.replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mon&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tues&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mY sHiFt KeY iS sTiCkY&amp;#34;&lt;/span&gt;.to_lowercase());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一个&amp;amp;str类型的字符串可以通过&lt;code&gt;.to_string()&lt;/code&gt;进行转换。&lt;/p&gt;&#xA;&lt;p&gt;如果需要删除一个字符串中的空格键，可以使用&lt;code&gt;.trim()&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;如果需要在一个字符串（String）后面加上一个新的字符串，可以有如下操作：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;compose_me&lt;/span&gt;(input: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;str&lt;/span&gt;) -&amp;gt; String {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// TODO: Add &amp;#34; world!&amp;#34; to the string! There are multiple ways to do this.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; input.to_string() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; world!&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实对于这段代码我是有点疑惑的，因为在前面的认知中，单独的双引号应当是字符串切片，而不是字符串，但是这里显然，一个String与一个字符串切片的连接，是一个String，而不是一个&amp;amp;str，有点意思。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git学习笔记（1）</title>
      <link>https://lamaper.github.io/post/git-study-1/</link>
      <pubDate>Mon, 14 Oct 2024 15:39:42 +0800</pubDate>
      <guid>https://lamaper.github.io/post/git-study-1/</guid>
      <description>&lt;h3 id=&#34;本地git向github提交代码&#34;&gt;本地Git向GitHub提交代码&lt;/h3&gt;&#xA;&lt;h4 id=&#34;建立ssh连接&#34;&gt;建立SSH连接&lt;/h4&gt;&#xA;&lt;p&gt;初次向github推送自己的代码，需要创建ssh-key&lt;/p&gt;&#xA;&lt;p&gt;首先在任意目录下打开git bash，键入：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourEmail@example.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;会在&lt;code&gt;~/.ssh&lt;/code&gt;目录下生成两个文件，我们复制公钥：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clip &amp;lt; ~/.ssh/id_rsa.pub&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着进入&lt;a href=&#34;https://github.com/settings/keys&#34;&gt;SSH and GPG keys (github.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择&lt;code&gt;new SSH key&lt;/code&gt;，将公钥粘贴进去即可。&lt;/p&gt;&#xA;&lt;h4 id=&#34;设置本地git&#34;&gt;设置本地git&lt;/h4&gt;&#xA;&lt;p&gt;首先，在没有其他特殊需求的情况下，设置全局用户名和邮箱：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global user.name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourName&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global user.email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourEmail@example.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着，在你已经配置好github的情况下，测试连接是否正常：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -T git@github.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;进行代码操作&#34;&gt;进行代码操作&lt;/h4&gt;&#xA;&lt;p&gt;首先将仓库的代码克隆到本地：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/yourName/example.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;紧接着，进入到这个目录中去，初始化仓库：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看仓库状态：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;需要注意的是，克隆下来的代码自带git配置，所以不需要在进行分支设置，直接对其进行同步操作即可：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;紧接着可以对仓库内的东西进行修改。&lt;/p&gt;&#xA;&lt;p&gt;在修改结束后，将仓库内需要更新的文件添加如仓库，一般我们同步全部的资料：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这之后我们可以进行代码的提交：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;this is a example&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后将代码同步到云端：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;即可完成操作&lt;/p&gt;&#xA;&lt;h4 id=&#34;git-pullpush-遭遇网络问题&#34;&gt;git pull/push 遭遇网络问题&lt;/h4&gt;&#xA;&lt;p&gt;一般来说，github的连接很不稳定，常用VPN进行加速，但因此会使得SSH连接异常，解决方法是将自己git的端口改为同VPN系统代理一样的端口：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global http.proxy http://127.0.0.1:&amp;lt;端口&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global https.proxy https://127.0.0.1:&amp;lt;相同的端口&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;特别地，如果需要sock5代理，也是如下操作：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web安全与渗透测试笔记</title>
      <link>https://lamaper.github.io/post/web-study-1/</link>
      <pubDate>Thu, 29 Aug 2024 22:17:02 +0800</pubDate>
      <guid>https://lamaper.github.io/post/web-study-1/</guid>
      <description>&lt;h3 id=&#34;author-lamaperhttpswwwcnblogscomlamaper&#34;&gt;&lt;a href=&#34;https://www.cnblogs.com/lamaper&#34;&gt;@author: lamaper&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;推荐网站&#34;&gt;推荐网站&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.52bug.cn/hkjs&#34;&gt;黑客技术 - 渗透测试 - 吾爱漏洞 (52bug.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cverc.org.cn/&#34;&gt;CVERC-国家计算机病毒应急处理中心&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.cnnvd.org.cn/index.html&#34;&gt;国家信息安全漏洞库 (cnnvd.org.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://avd.aliyun.com/&#34;&gt;阿里云漏洞库 (aliyun.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.anquanke.com/&#34;&gt;安全客 - 安全资讯平台 (anquanke.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://book.hacktricks.xyz/welcome/readme&#34;&gt;HackTricks - HackTricks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://govuln.com/&#34;&gt;首页 - 『代码审计』知识星球 (govuln.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.leavesongs.com/#&#34;&gt;首页 | 离别歌 (leavesongs.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本笔记目前更适用于CTF，渗透测试的内容正在更新&lt;/p&gt;&#xA;&lt;p&gt;推荐靶场&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ctfer.vip/index&#34;&gt;NSSCTF - 主页 (ctfer.vip)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://buuoj.cn/&#34;&gt;BUUCTF在线评测 (buuoj.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://app.hackthebox.com/&#34;&gt;https://app.hackthebox.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文遵循CC BY-SA 4.0:要求署名原作者与来源、允许转载或二创、允许商用、要求同协议共享&lt;/p&gt;&#xA;&lt;h2 id=&#34;一基本网络知识&#34;&gt;一、基本网络知识&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一网络是怎样联通的&#34;&gt;（一）网络是怎样联通的&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.51cto.com/article/597961.html&#34;&gt;TCP/IP协议&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%9B%A0%E7%89%B9%E7%BD%91/114119?fr=aladdin&#34;&gt;Internet&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/lingxu6/article/details/124738027&#34;&gt;Http协议&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;二http协议&#34;&gt;（二）Http协议&lt;/h3&gt;&#xA;&lt;h4 id=&#34;http请求&#34;&gt;http请求&lt;/h4&gt;&#xA;&lt;p&gt;一个完整的Http请求由四个部分组成：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;请求行&lt;/li&gt;&#xA;&lt;li&gt;请求头&lt;/li&gt;&#xA;&lt;li&gt;空行&lt;/li&gt;&#xA;&lt;li&gt;请求体&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h5 id=&#34;1请求行&#34;&gt;1、请求行&lt;/h5&gt;&#xA;&lt;p&gt;请求行：请求行是由请求方法字段、url字段、http协议版本字段3个部分组成。请求行定义了本次请求的方式，格式如下：&lt;code&gt;GET/example.html HTTP/1.1(CRLF)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;请求方法有如下几种：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GET： 请求获取Request-URI所标识的资源&lt;/li&gt;&#xA;&lt;li&gt;POST： 在Request-URI所标识的资源后增加新的数据&lt;/li&gt;&#xA;&lt;li&gt;HEAD： 请求获取由Request-URI所标识的资源的响应消息报头&lt;/li&gt;&#xA;&lt;li&gt;PUT： 请求服务器存储或修改一个资源，并用Request-URI作为其标识&lt;/li&gt;&#xA;&lt;li&gt;DELETE： 请求服务器删除Request-URI所标识的资源&lt;/li&gt;&#xA;&lt;li&gt;TRACE： 请求服务器回送收到的请求信息，主要用于测试或诊断&lt;/li&gt;&#xA;&lt;li&gt;CONNECT： 保留将来使用&lt;/li&gt;&#xA;&lt;li&gt;OPTIONS： 请求查询服务器的性能，或者查询与资源相关的选项和需求&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;其中在Web安全中常用的方法为GET和POST，他们通常与编程语言结合，用来传递某些参数，例如在php中：&lt;/p&gt;</description>
    </item>
    <item>
      <title>WinServer19&#43;CTFd&#43;Docker部署动态靶机</title>
      <link>https://lamaper.github.io/post/win-ctfd/</link>
      <pubDate>Mon, 05 Sep 2022 21:17:02 +0800</pubDate>
      <guid>https://lamaper.github.io/post/win-ctfd/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;mailto:lamaper@qq.com&#34;&gt;lamaper@qq.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.ctfd.io/docs/deployment/installation&#34;&gt;安装|CTFd 文档&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;一部署服务端docker&#34;&gt;一、部署服务端Docker&lt;/h2&gt;&#xA;&lt;p&gt;正确安装Windows Server 2019；&lt;/p&gt;&#xA;&lt;p&gt;若要在 Windows Server 上安装 Docker，可以使用由 Microsoft 发布的 &lt;a href=&#34;https://github.com/oneget/oneget&#34;&gt;OneGet 提供程序 PowerShell 模块&lt;/a&gt;（称为 &lt;a href=&#34;https://github.com/OneGet/MicrosoftDockerProvider&#34;&gt;DockerMicrosoftProvider&lt;/a&gt;）。&lt;/p&gt;&#xA;&lt;p&gt;注：在购买的服务器中不可直接安装docker desktop，因为购买的服务器已经进行过一次虚拟化，安装&lt;/p&gt;&#xA;&lt;p&gt;此提供程序启用 Windows 中的容器功能，并安装 Docker 引擎和客户端。 以下是操作方法：&lt;/p&gt;&#xA;&lt;h3 id=&#34;0安装fastgithub&#34;&gt;0、安装FastGithub&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dotnetcore/fastgithub/releases&#34;&gt;Releases · dotnetcore/FastGithub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/mirrors/fastgithub?_from=gitee_search&#34;&gt;fastgithub国内镜像(gitee.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;运行fastgithub&lt;/p&gt;&#xA;&lt;h3 id=&#34;1安装docker&#34;&gt;**1、**安装docker&lt;/h3&gt;&#xA;&lt;p&gt;打开提升的 PowerShell 会话，从 &lt;a href=&#34;https://www.powershellgallery.com/packages/DockerMsftProvider&#34;&gt;PowerShell 库&lt;/a&gt;安装 Docker-Microsoft PackageManagement 提供程序。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Install-Module -Name DockerMsftProvider -Repository PSGallery -Force&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果系统提示安装 NuGet 提供程序，键入 &lt;code&gt;Y&lt;/code&gt; 进行安装。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;如果出错，应该关闭PowerShell窗口，用admin权限重新打开操作，因为实践中发现下载中断后无法继续的情况。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果在打开 PowerShell 库时遇到错误，则可能需要将 PowerShell 客户端使用的 TLS 版本设置为 TLS 1.2。 为此，请运行以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set the TLS version used by the PowerShell client to TLS 1.2.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;System.Net.ServicePointManager&lt;/span&gt;]::SecurityProtocol = [&lt;span style=&#34;color:#66d9ef&#34;&gt;System.Net.SecurityProtocolType&lt;/span&gt;]::Tls12;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2使用-packagemanagement-powershell-模块安装最新版本的-docker&#34;&gt;**2、**使用 PackageManagement PowerShell 模块安装最新版本的 Docker&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Install-Package -Name docker -ProviderName DockerMsftProvider&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PowerShell 询问是否信任包源“DockerDefault”时，键入 &lt;code&gt;A&lt;/code&gt; 以继续进行安装。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP的session文件包含与竞争</title>
      <link>https://lamaper.github.io/post/php-session/</link>
      <pubDate>Thu, 25 Aug 2022 18:12:21 +0800</pubDate>
      <guid>https://lamaper.github.io/post/php-session/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;mailto:lamaper@qq.com&#34;&gt;lamaper@qq.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/lamaper/&#34;&gt;lamaper - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;一什么是session&#34;&gt;一、什么是Session&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Session：在计算机中，尤其是在网络应用中，称为“会话控制”。Session对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的Web页之间跳转时，存储在Session对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;由于html的特性，多个请求之间无关联，如果在/xxx.html中为登录状态，那么跳转到/yyy.html就会变成默认的未登录状态，seesion的出现是为了弥补这一缺陷，让每一个用户在多个请求中状态一致。&lt;/p&gt;&#xA;&lt;p&gt;session是保存在服务端的，与之相对的是cookie，cookie是保存在客户端的。每当用户使用一浏览器开始对服务器发出请求，一个session就会被创建，当用户关闭浏览器结束访问，session会被删除。所以用同一个ip访问同一个网站，如果浏览器不同，用户状态也是不同的，所以session创建的标准是浏览器而不是ip。session不随刷新页面而消失。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;以下内容以php举例&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;每次我们访问一个页面，如果有开启session，也就是有session_start() 时，就会自动生成一个session_id 来标注是这次会话的唯一ID，同时也会自动往cookie里写入一个名字为PHPSESSID的变量，它的值正是session_id，当这次会话没结束，再次访问的时候，服务器会去读取这个PHPSESSID的cookie是否有值有没过期，如果能够读取到，则继续用这个session_id，如果没有，就会新生成一个session_id，同时生成PHPSESSID这个cookie。由于默认生成的这个PHPSESSID cookie是会话，也就是说关闭浏览器就会过期掉，所以，下次重新浏览时，会重新生成一个session_id。&lt;/p&gt;&#xA;&lt;p&gt;这个session是32位的。&lt;/p&gt;&#xA;&lt;p&gt;session的存储地址在&lt;code&gt;php.ini&lt;/code&gt;文件中会被标明，一般最后一级目录会是&lt;code&gt;\tmp&lt;/code&gt;，当一个会话开始的时候，服务器会在目录下写入&lt;code&gt;sess_xxxxxxxxxx&lt;/code&gt;文件，下划线后的就是这个会话的session_id。&lt;/p&gt;&#xA;&lt;h2 id=&#34;二一些session的服务端操作&#34;&gt;二、一些session的服务端操作&lt;/h2&gt;&#xA;&lt;p&gt;一般我们通过&lt;code&gt;$_SESSION[&#39;&amp;lt;变量名&amp;gt;&#39;] = ....&lt;/code&gt;将一些数据存储在session中。这些数据最终会被以序列化后的格式存储在sess_文件中。session.save_handler = files 表示的是session的存储方式，默认的是files文件的方式保存。&lt;/p&gt;&#xA;&lt;h3 id=&#34;一些常用的函数与参数&#34;&gt;一些常用的函数与参数&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;save_handler &lt;/code&gt;不仅仅只能用文件files，还可以用我们常见的memcache 和 redis 来保存。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;session.use_cookies&lt;/code&gt; 默认是1，表示会在浏览器里创建值为PHPSESSID的session_id，session.name = PHPSESSID 找个配置就是改这个名字的，这个名称可以进行修改，如修改成PhPP，就会在浏览器cookie中创建PhPP的sessionid。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;session.auto_start = 0 &lt;/code&gt;用来是否需要自动开启session，默认是不开启的，所有我们需要在代码中用到session_start()；函数开启，如果设置成1，那么session_id 也会自动就生成了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;session.cookie_lifetime = 0 &lt;/code&gt;这个是设置在客户端生成PHPSESSID这个cookie的过期时间，默认是0，也就是关闭浏览器就过期，下次访问，会再次生成一个session_id。所以，如果想关闭浏览器会话后，希望session信息能够保持的时间长一点，可以把这个值设置大一点，单位是秒。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;gc_divisor&lt;/code&gt;, &lt;code&gt;gc_probability&lt;/code&gt;, &lt;code&gt;gc_maxlifetime &lt;/code&gt;是回收这些sess_xxxxx 的文件，它是按照这3个参数，组成的比率，来启动GC删除这些过期的sess文件。gc_maxlifetime是sess_xxx文件的过期时间。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三session恶意代码&#34;&gt;三、session恶意代码&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;code&gt;phpinfo()&lt;/code&gt;中存在这些数据&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;save_handler&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;files&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;files&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示session以文件的形式存储。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;save_path&lt;/span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp&lt;/span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示session存储目录在&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tmp下。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;serialize_handler&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示反序列化和序列号的处理器是PHP。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cleanup&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示文件上传结束后，php会立即清除对应session文件中的内容。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示upload_progress功能启动，即浏览器向服务器上传文件时，php会把此次文件上传的详细信息存储在session中。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;freq&lt;/span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;min_freq&lt;/span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#x9;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;freq&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;和&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;min_freq&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;两项用来设置服务器端对进度信息的更新频率。合理的设置这两项可以减轻服务器的负担。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;PHP_SESSION_UPLOAD_PROGRESS&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;PHP_SESSION_UPLOAD_PROGRESS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prefix&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress_&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload_progress_&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;prefix&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;和&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;两项用来设置进度信息在session中存储的变量名&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;键名&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use_cookies&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示使用cookie记录sessionid。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use_only_cookies&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;On&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;表示是否在客户端仅仅使用&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cookie&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;来存放会话&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ID。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;session&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use_strict_mode&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Off&lt;/span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Off&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;值为off，表示Cookie中的sessionid可控。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般来说PHP_SESSION_UPLOAD_PROGRESS是开的，所以我们一般会往这个键值中写入恶意代码，然后让整个sess文件被文件包含后解析代码，最终执行代码。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
